[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "1 + 1\n\n[1] 2"
  },
  {
    "objectID": "fall.html",
    "href": "fall.html",
    "title": "Fall",
    "section": "",
    "text": "library(gsubfn)\n\nLoading required package: proto\n\nlibrary(tidyverse)\n\n── Attaching packages\n───────────────────────────────────────\ntidyverse 1.3.2 ──\n\n\n✓ ggplot2 3.3.5     ✓ purrr   0.3.4\n✓ tibble  3.1.6     ✓ dplyr   1.0.9\n✓ tidyr   1.2.0     ✓ stringr 1.4.0\n✓ readr   2.1.2     ✓ forcats 0.5.1\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\nx dplyr::filter() masks stats::filter()\nx dplyr::lag()    masks stats::lag()\n\n# Define elements in plant art\n\n# Each image corresponds to a different axiom, rules, angle and depth\n\n# Leaf of Fall\n\naxiom=\"X\"\n\nrules=list(\"X\"=\"F-[[X]+X]+F[+FX]-X\", \"F\"=\"FF\")\n\nangle=22.5\n\ndepth=6\n\nfor (i in 1:depth) axiom=gsubfn(\".\", rules, axiom)\n\nactions=str_extract_all(axiom, \"\\\\d*\\\\+|\\\\d*\\\\-|F|L|R|\\\\[|\\\\]|\\\\|\") %>% unlist\n\nstatus=data.frame(x=numeric(0), y=numeric(0), alfa=numeric(0))\n\npoints=data.frame(x1 = 0, y1 = 0, x2 = NA, y2 = NA, alfa=90, depth=1)\n\n# Generating data\n\n# Note: may take a minute or two\n\nfor (action in actions)\n\n{\n\n  if (action==\"F\")\n\n  {\n\n    x=points[1, \"x1\"]+cos(points[1, \"alfa\"]*(pi/180))\n\n    y=points[1, \"y1\"]+sin(points[1, \"alfa\"]*(pi/180))\n\n    points[1,\"x2\"]=x\n\n    points[1,\"y2\"]=y\n\n    data.frame(x1 = x, y1 = y, x2 = NA, y2 = NA,\n\n               alfa=points[1, \"alfa\"],\n\n               depth=points[1,\"depth\"]) %>% rbind(points)->points\n\n  }\n\n  if (action %in% c(\"+\", \"-\")){\n\n    alfa=points[1, \"alfa\"]\n\n    points[1, \"alfa\"]=eval(parse(text=paste0(\"alfa\",action, angle)))\n\n  }\n\n  if(action==\"[\"){\n\n    data.frame(x=points[1, \"x1\"], y=points[1, \"y1\"], alfa=points[1, \"alfa\"]) %>%\n\n      rbind(status) -> status\n\n    points[1, \"depth\"]=points[1, \"depth\"]+1\n\n  }\n\n  if(action==\"]\"){\n\n    depth=points[1, \"depth\"]\n\n    points[-1,]->points\n\n    data.frame(x1=status[1, \"x\"], y1=status[1, \"y\"], x2=NA, y2=NA,\n\n               alfa=status[1, \"alfa\"],\n\n               depth=depth-1) %>%\n\n      rbind(points) -> points\n\n    status[-1,]->status\n\n  }\n\n}\n\nggplot() +\n\n  geom_segment(aes(x = x1, y = y1, xend = x2, yend = y2),\n\n               lineend = \"round\",\n\n               color=\"darkred\", # Set your own Fall color?\n\n               data=na.omit(points)) +\n\n  coord_fixed(ratio = 1) +\n\n  theme_void() # No grid nor axes"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Kiran Jaura",
    "section": "",
    "text": "-Kiran Jaura"
  },
  {
    "objectID": "research.html",
    "href": "research.html",
    "title": "Research",
    "section": "",
    "text": "My research areas include Harry Potter.\n\npar(family=\"sans\")\nplot(iris, pch=20, cex=.75, col=\"steelblue\")"
  }
]